name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.4'
      - name: Install dependencies
        run: |
          brew install carthage
          gem install xcpretty
      - name: Bootstrap Carthage dependencies
        run: |
          set -o pipefail
          ./carthage.sh bootstrap --platform iOS --no-use-binaries --use-xcframeworks --verbose 2>&1 | tee carthage.log
      - name: Upload Carthage log
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: carthage-xcodebuild.log
          path: carthage.log
      - name: Run tests with xcodebuild
        run: |
          # Run tests using xcodebuild which generates proper test results
          xcodebuild test \
            -project TandemKit.xcodeproj \
            -scheme TandemKit \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=latest' \
            -resultBundlePath TestResults.xcresult \
            -resultBundleVersion 3 \
            CODE_SIGNING_ALLOWED=NO \
            CODE_SIGNING_REQUIRED=NO \
            CODE_SIGN_IDENTITY="" \
            | xcpretty -r junit --output test-results.xml
      
      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test-results.xml
